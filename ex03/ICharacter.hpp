/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ICharacter.hpp                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mlarra <mlarra@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/10/20 11:52:07 by mlarra            #+#    #+#             */
/*   Updated: 2022/10/20 12:36:31 by mlarra           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef ICHARACTER_HPP
# define ICHARACTER_HPP

# include <iostream>
# include "AMateria.hpp"

// Напишите конкретный класс Character, который будет реализовывать следующий интерфейс:

// В инвентаре Персонажа 4 слота, что означает максимум 4 Материи. 
// Инвентарь пуст при строительстве. Они экипируют Материи в первый свободный слот, 
// который они найдут. То есть в таком порядке: от слота 0 до слота 3. 
// В случае, если они попытаются добавить Материю в полный инвентарь, 
// или использовать/снять несуществующую Материю, ничего не делать 
// (но тем не менее, баги запрещены). 
// Функция-член unequip() НЕ ДОЛЖНА удалять Материю!

// Распоряжайтесь Материями, оставленными вашим персонажем на полу, как вам угодно. 
// Сохраняйте адреса перед вызовом unequip() или чего-то еще, но не забывайте, 
// что вы должны избегать утечек памяти.

// Функция-член use(int, ICharacter&) должна будет использовать Материю в слоте [idx] 
// и передать целевой параметр функции AMateria::use.

class ICharacter
{
public:
	virtual ~ICharacter() {}
	virtual std::string const & getName() const = 0;
	virtual void equip(AMateria* m) = 0;
	virtual void unequip(int idx) = 0;
	virtual void use(int idx, ICharacter& target) = 0;
};

#endif